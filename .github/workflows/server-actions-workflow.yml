#name: CI/CD Pipeline for server
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  Docker_Build_And_Push:
#
#    runs-on: ubuntu-22.04
#
#    steps:
#      - name: Check out the repository
#        uses: actions/checkout@v3
#
#      - name: Log in to Docker Hub
#        run: |
#          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#
#      # 도커 캐싱
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Cache Docker layers
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{runner.os}}-docker-${{hashFiles('**/server/Dockerfile', '**/server/build.gradle.kts.kts', '**/server/settings.gradle.kts.kts')}}
#          restore-keys: |
#            ${{runner.os}}-docker-${{hashFiles('**/server/Dockerfile')}}
#            ${{runner.os}}-docker-
#
#      - name: Build and Push Docker image
#        run: |
#          docker buildx build \
#          --platform linux/amd64 \
#          --push \
#          --tag 5hseok/APAC-SolutionChallenge-Greenap:0.0.1 \
#          --cache-from type=local,src=/tmp/.buildx-cache \
#          --cache-to type=local,dest=/tmp/.buildx-cache,mode=max \
#          --file ./server/Dockerfile .
#
#  Deploy:
#    needs: Docker_Build_And_Push
#    runs-on: ubuntu-22.04
#
#    steps:
##      - name: Deploy to EC2 via SSH
##        uses: appleboy/ssh-action@v0.1.5
##        with:
##          host: ${{ secrets.EC2_HOST }}
##          username: ${{ secrets.EC2_USER }}
##          key: ${{ secrets.EC2_SSH_KEY }}
##          port: 22
##          script: |
##            cd /home/ubuntu
##
##            export JASYPT_KEY=${{ secrets.JASYPT_KEY }}
##
##            sudo docker-compose pull
##
##            sudo docker-compose down || true
##
##            sudo -E docker-compose up -d
